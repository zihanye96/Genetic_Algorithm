% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{select}
\alias{select}
\title{Select best regression model using genetic algorithm}
\usage{
select(
  data,
  response,
  covariates,
  criterion = "AIC",
  family = "gaussian",
  maximize = FALSE
)
}
\arguments{
\item{data}{The dataset to perform regression on.}

\item{response}{A character string of the name of the response variable.}

\item{covariates}{A character vector of names of the predictor variables (covariates).}

\item{criterion}{AIC by default, but user can provide their own}

\item{family}{a character string naming a family function to use in the model (passed to glm)
common families include "gaussian" (identity link), "binomial" (logit link), "poisson" (log link)}
}
\value{
The regression model selected by the genetic algorithm. This is an object of class "glm" and "lm"
}
\description{
\code{select} implements a genetic algorithm for variable selection in regression and returns
the regression model selected by the genetic algorithm.
}
\details{
This implementation of the genetic algorithm uses generation size p = ceiling(1.5*c/2)*2
where c is the length of the chromosomes (i.e. the number of covariates to consider in the model).
The parent chromosomes are selected via rank-based selection, where the probability of a chromosome
being selected as parent 1 is proportional to its relative rank, = 2r/(p*(p+1)), where r is the relative rank
(higher is better). Parent 1 is selected with these probabilities, and parent 2 is selected completely
at random.
Each chromosome is mutated with probability 1/c, which has been supported by theoretical work and
empirical studies.
The algorithm will stop when the objective criterion score (AIC by default) converges absolutely, i.e.
when the absolute difference between the score from iteration i-1 and the score from iteration i is less
than .000001, the algorithm stops and returns the best model from iteration i of the algorithm.
}
\examples{
data <- mtcars
response <- names(mtcars)[1]
covariates <- names(mtcars)[-1]
select(data, response, covariates)

# How to perform logistic regression with select()
response <- "am"
covariates <- c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec", "vs", "gear", "carb")
select(data, response, covariates, family = "binomial")

# You can also use another objective function instead of AIC (default)
response <- "mpg"
covariates <- c("cyl", "disp", "hp", "drat", "wt", "qsec", "vs", "am")
select(data, response, covariates, criterion="BIC")
}
